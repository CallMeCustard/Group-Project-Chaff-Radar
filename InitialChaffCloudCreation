Number_Of_Strips = 1000;
Strip_Spacing = 4;
Widths = 0.05;
Lengths = 2;
Size_X = 1.5;
Size_Y = 2;
Size_Z = 1;
Scaled_Unit = 1;

V = @(x,y,z)[x,y,z];

geometry = setupGeometry(Number_Of_Strips, Strip_Spacing, Widths, Lengths, Size_X, Size_Y, Size_Z, Scaled_Unit,V);

positions = geometry(1:4:end,:);
neighbour_range = 2 * Strip_Spacing;
density = zeros(Number_Of_Strips,1);

for i = 1:Number_Of_Strips
    distances = sqrt(sum((positions - positions(i,:)).^2,2));
    density(i) = sum(distances < neighbour_range)-1;
end

density_normalised = (density - min(density)) / (max(density) - min(density));
cmap = jet(256);
colormap(cmap);
figure;
hold on;
for i = 1:size(geometry, 1) / 4
    strip = geometry((i-1)*4+1:i*4,:);
    color_idx = round(density_normalised(i)*255) +1;
    line_color = cmap(color_idx,:);
    plot(strip(:,1),strip(:,2), '-','Color',line_color,'LineWidth',1);
end
title('Chaff Cloud Distribution');
xlabel('X Position (Scaled Units)');
ylabel('Y Position (Scaled Units)');
colorbar;
hold off;


max_spacing = 20;
increment = 1;
fps = 1;
output_file = 'chaff_animation3.mp4';
video = VideoWriter(output_file, 'MPEG-4');
video.FrameRate = fps;
open(video);


figure;
hold on;
title('Chaff Cloud Distribution');
xlabel('X Position (Scaled Units)');
ylabel('Y Position (Scaled Units)');
xlim([-40 40]);
ylim([-40 40]);

for spacing = Strip_Spacing:increment:max_spacing
     geometry = setupGeometry(Number_Of_Strips, spacing, Widths, Lengths, Size_X, Size_Y, Size_Z, Scaled_Unit,V);
     cla;
     for i = 1:size(geometry,1) / 4
         strip = geometry((i-1)*4+1:i*4,:);
         plot(strip(:, 1), strip(:, 2), '-');
     end
     frame = getframe(gcf);
     writeVideo(video,frame);
     drawnow;
end
close(video);
hold off; 



function strips = setupGeometry(Number_Of_Strips, Strip_Spacing, Widths, Lengths, Size_X, Size_Y, Size_Z, Scaled_Unit,V)
    strips = [];
    for i = 1:Number_Of_Strips
        x = randi([0, 2 * Strip_Spacing * Size_X]) - Strip_Spacing * Size_X;
        y = randi([0, 2 * Strip_Spacing * Size_Y]) - Strip_Spacing * Size_Y;
        z = randi([0, 2 * Strip_Spacing * Size_Z]) - Strip_Spacing * Size_Y;
        ang = randi([0,360]);

        p1 = V(x,y,z) * Scaled_Unit;
        p2 = V(x + Widths * sind(ang), y-Widths * cosd(ang), z) * Scaled_Unit;
        p3 = V(x + Widths * sind(ang) + Lengths *cosd(ang), y-Widths * cosd(ang) + Lengths * sind(ang), z) * Scaled_Unit;
        p4 = V(x + Lengths * cosd(ang), y+Lengths * sind(ang), z) * Scaled_Unit;

        strip = [p1; p2; p3; p4];
        strips = [strips; strip];
    end
end
